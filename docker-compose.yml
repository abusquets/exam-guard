services:
  base_image:
    image: base_image
    build:
      context: .
      dockerfile: Dockerfile
      args:
        POETRY_DEV: ${POETRY_DEV:-true}
        WAIT_BIN: ${WAIT_BIN:-wait}
    command: []
    entrypoint: "sh"

  api:
    container_name: exam-guard-api
    image: base_image
    env_file:
      - env-api-dev
    environment:
      LOADFIXTURES: ${LOADFIXTURES:-false}
      DEBUGPY: ${DEBUGPY:-true}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-exam_guard}:${POSTGRES_PASSWORD:-exam_guard}@${DB_HOST:-postgres}:5432/${POSTGRES_DB:-exam_guard}
      WAIT_HOSTS: postgres:5432,postgres-test:5432,rabbit:5672
      START_RABBIT: true
      WAIT_LOGGER_LEVEL: debug
      WAIT_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 5
      PYDEVD_DISABLE_FILE_VALIDATION: 1
    depends_on:
      - base_image
      - rabbit
      - postgres
    volumes:
      - ./src/:/app:cached
    ports:
      - 8000:80
      - 5678:5678 # debupy for webapp
      - 5679:5679 # debupy for console
    command: ["sh", "-c", "/wait && bash -c '/entrypoint.sh run-devel'"]
    restart: on-failure

  asgi:
    container_name: exam-guard-asgi
    # TODO: Use specific build
    image: base_image
    env_file:
      - env-api-dev
    environment:
      DEBUGPY: ${DEBUGPY:-true}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-exam_guard}:${POSTGRES_PASSWORD:-exam_guard}@${DB_HOST:-postgres}:5432/${POSTGRES_DB:-exam_guard}
      START_RABBIT: false
      WAIT_HOSTS: postgres:5432,rabbit:5672
      WAIT_LOGGER_LEVEL: error
      WAIT_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 5
      PYDEVD_DISABLE_FILE_VALIDATION: 1
    depends_on:
      - base_image
      - postgres
    volumes:
      - ./src/:/app:cached
    ports:
      - 8001:80
    # command: ["sh", "-c", "/wait && bash -c '/entrypoint.sh run-asgi'"]
    command: ["sh"]
    # restart: on-failure

  worker:
    container_name: exam-guard-worker
    image: base_image
    env_file:
      - env-api-dev
    environment:
      DEBUGPY: ${DEBUGPY:-true}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-exam_guard}:${POSTGRES_PASSWORD:-exam_guard}@${DB_HOST:-postgres}:5432/${POSTGRES_DB:-exam_guard}
      BROKER_URL: "amqp://admin:1234@rabbit:5672/test"
      WAIT_HOSTS: postgres:5432,postgres-test:5432
      WAIT_LOGGER_LEVEL: error
      WAIT_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 5
      PYDEVD_DISABLE_FILE_VALIDATION: 1
    depends_on:
      - base_image
      - postgres
    volumes:
      - ./src/:/app:cached
    command:
      - /bin/sh
      # - -c
      # - |
      #   /wait && watchmedo auto-restart --directory=/app --pattern="*.py;*.yaml" --recursive -- \
      #   /bin/bash -c 'sleep 5; python app/worker.py'

  postgres:
    container_name: exam-guard-postgres
    image: postgres:16.1
    environment:
      POSTGRES_DB: ${POSTGRES_DB-exam_guard}
      POSTGRES_USER: ${POSTGRES_USER-exam_guard}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-exam_guard}
    # ALTER SYSTEM SET max_connections = 250;
    # show max_connections;
    command: postgres -c 'max_connections=250'
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data:delegated
      - ./data/exam_guard_start.sql:/docker-entrypoint-initdb.d/00_exam_guard_start.sql
      - ./data:/data
    stdin_open: true
    tty: true

  postgres-test:
    container_name: exam-guard-postgres-test
    image: postgres:16.1
    environment:
      POSTGRES_DB: ${POSTGRES_DB-exam_guard}
      POSTGRES_USER: ${POSTGRES_USER-exam_guard}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-exam_guard}
    volumes:
      - postgres_test_data:/var/lib/postgresql/data:delegated
      - ./data/exam_guard_start.sql:/docker-entrypoint-initdb.d/00_exam_guard_start.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER-exam_guard}"]
      interval: 10s
      retries: 5
      start_period: 5s
    command: postgres -c 'max_connections=844'

  rabbit:
    container_name: exam-guard-rabbit
    image: rabbitmq:3.10.5-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 1234
      RABBITMQ_DEFAULT_VHOST: test
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error}] -rabbitmq_management"
      # RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error}] -rabbitmq_management -rabbitmq_management load_definitions "/tmp/definitions.json"

    ports:
      - 5672:5672 # AMQP protocol port
      - 15672:15672 # HTTP management UI
    volumes:
      - rabbit_data:/var/lib/rabbitmq/mnesia:delegated # Persistent local volume
      - ./rabbit.conf:/etc/rabbitmq/rabbitmq.conf # RabbitMQ configuration file
      - ./rabbit_definitions.json:/tmp/definitions.json

volumes:
  postgres_data:
  postgres_test_data:
  rabbit_data:
